function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = EA_SWW14_rep.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(62, 119);
g1(1,1)=(-(1-params(40)));
g1(1,33)=1;
g1(1,95)=(-params(40));
g1(1,34)=params(41);
g1(1,96)=(-params(41));
g1(1,68)=(-params(41));
g1(2,4)=(-params(42));
g1(2,36)=1;
g1(2,97)=(-(1-params(42)));
g1(2,37)=(-params(43));
g1(2,69)=(-1);
g1(3,34)=1;
g1(3,96)=(-1);
g1(3,37)=1;
g1(3,98)=(-(1-params(44)));
g1(3,99)=(-params(44));
g1(3,68)=(-1);
g1(4,33)=(-params(23));
g1(4,36)=(-params(24));
g1(4,39)=1;
g1(4,40)=(-params(25));
g1(4,70)=(-1);
g1(5,39)=1;
g1(5,41)=(-(params(6)*params(7)));
g1(5,42)=(-(params(6)*(1-params(7))));
g1(5,71)=(-params(6));
g1(6,35)=1;
g1(6,52)=(-(1-params(36)-params(37)));
g1(6,53)=(-params(36));
g1(6,54)=(-params(37));
g1(7,43)=(-params(46));
g1(7,11)=(-params(8));
g1(7,52)=1-params(45)*(-params(8));
g1(7,102)=(-params(45));
g1(7,72)=params(46)*100;
g1(8,43)=(-params(46));
g1(8,13)=(-params(8));
g1(8,54)=1-params(45)*(-params(8));
g1(8,104)=(-params(45));
g1(8,72)=params(46)*100;
g1(8,77)=params(46)*100;
g1(9,43)=(-params(46));
g1(9,12)=(-params(8));
g1(9,53)=1-params(45)*(-params(8));
g1(9,103)=(-params(45));
g1(9,72)=params(46)*100;
g1(9,76)=params(46)*100;
g1(10,38)=(-params(7));
g1(10,43)=1;
g1(10,44)=(-(1-params(7)));
g1(10,71)=1;
g1(11,3)=(-params(11));
g1(11,35)=1-params(3)*(-params(11));
g1(11,96)=(-params(3));
g1(11,6)=(-1);
g1(11,44)=1+params(3);
g1(11,100)=(-params(3));
g1(11,46)=params(47)*params(14);
g1(11,74)=params(47)*(-100);
g1(12,44)=(-1);
g1(12,45)=1;
g1(12,46)=params(14);
g1(12,47)=params(14);
g1(12,73)=1;
g1(13,48)=params(14);
g1(13,74)=(-100);
g1(14,46)=(-1);
g1(14,47)=(-1);
g1(14,49)=1;
g1(15,1)=(-(T(2)*(-T(1))));
g1(15,33)=(-T(2));
g1(15,7)=(-(1-params(15)));
g1(15,45)=1;
g1(16,36)=(-(1-params(48)));
g1(16,9)=(-params(48));
g1(16,50)=1;
g1(16,69)=(-params(49));
g1(17,40)=(-1);
g1(17,41)=1;
g1(17,9)=(-1);
g1(18,38)=(-((1-params(16))/params(16)));
g1(18,40)=1;
g1(19,38)=1;
g1(19,41)=1;
g1(19,42)=(-1);
g1(19,44)=(-1);
g1(20,2)=(-params(17));
g1(20,34)=1;
g1(20,35)=(-((1-params(17))*params(18)));
g1(20,10)=(-((1-params(17))*(-params(20))));
g1(20,51)=(-((1-params(17))*(params(19)+params(20))));
g1(20,75)=1;
g1(21,42)=(-params(50));
g1(21,8)=(-1);
g1(21,47)=1-((-params(3))-params(50));
g1(21,101)=(-params(3));
g1(22,14)=(-(1-params(40)));
g1(22,55)=1;
g1(22,105)=(-params(40));
g1(22,56)=params(41);
g1(22,68)=(-params(41));
g1(23,15)=(-params(42));
g1(23,57)=1;
g1(23,106)=(-(1-params(42)));
g1(23,58)=(-params(43));
g1(23,69)=(-1);
g1(24,56)=1;
g1(24,58)=1;
g1(24,107)=(-(1-params(44)));
g1(24,108)=(-params(44));
g1(24,68)=(-1);
g1(25,55)=(-params(23));
g1(25,57)=(-params(24));
g1(25,60)=(-params(25));
g1(25,67)=1;
g1(25,70)=(-1);
g1(26,61)=(-(params(6)*params(7)));
g1(26,62)=(-(params(6)*(1-params(7))));
g1(26,67)=1;
g1(26,71)=(-params(6));
g1(27,59)=(-params(7));
g1(27,63)=(-(1-params(7)));
g1(27,71)=1;
g1(28,62)=(-params(14));
g1(28,63)=1;
g1(28,64)=(-1);
g1(28,73)=(-1);
g1(29,14)=(-(T(2)*(-T(1))));
g1(29,55)=(-T(2));
g1(29,16)=(-(1-params(15)));
g1(29,64)=1;
g1(30,57)=(-(1-params(48)));
g1(30,18)=(-params(48));
g1(30,66)=1;
g1(30,69)=(-params(49));
g1(31,60)=(-1);
g1(31,61)=1;
g1(31,18)=(-1);
g1(32,59)=(-((1-params(16))/params(16)));
g1(32,60)=1;
g1(33,59)=1;
g1(33,61)=1;
g1(33,62)=(-1);
g1(33,63)=(-1);
g1(34,62)=(-params(50));
g1(34,17)=(-1);
g1(34,65)=1-((-params(3))-params(50));
g1(34,109)=(-params(3));
g1(35,39)=(-1);
g1(35,51)=1;
g1(35,67)=1;
g1(36,22)=(-params(54));
g1(36,71)=1;
g1(36,113)=(-1);
g1(37,19)=(-params(51));
g1(37,68)=1;
g1(37,110)=(-1);
g1(38,21)=(-params(53));
g1(38,70)=1;
g1(38,112)=(-1);
g1(38,113)=(-params(55));
g1(39,23)=(-params(56));
g1(39,72)=1;
g1(39,114)=(-1);
g1(39,31)=params(57);
g1(40,20)=(-params(52));
g1(40,69)=1;
g1(40,111)=(-1);
g1(41,26)=(-params(61));
g1(41,75)=1;
g1(41,117)=(-1);
g1(42,24)=(-params(58));
g1(42,73)=1;
g1(42,115)=(-1);
g1(43,25)=(-params(59));
g1(43,74)=1;
g1(43,116)=(-1);
g1(43,32)=params(60);
g1(44,27)=(-params(62));
g1(44,76)=1;
g1(44,114)=(-1);
g1(44,118)=(-1);
g1(44,31)=params(57);
g1(45,28)=(-params(63));
g1(45,77)=1;
g1(45,114)=(-1);
g1(45,119)=(-1);
g1(45,31)=params(57);
g1(46,5)=1;
g1(46,39)=(-1);
g1(46,78)=1;
g1(47,1)=1;
g1(47,33)=(-1);
g1(47,79)=1;
g1(48,4)=1;
g1(48,36)=(-1);
g1(48,80)=1;
g1(49,52)=(-1);
g1(49,86)=1;
g1(50,53)=(-1);
g1(50,87)=1;
g1(51,54)=(-1);
g1(51,88)=1;
g1(52,85)=1;
g1(52,86)=(-(1-params(36)-params(37)));
g1(52,87)=(-params(36));
g1(52,88)=(-params(37));
g1(53,3)=(-1);
g1(53,35)=1;
g1(53,6)=1;
g1(53,44)=(-1);
g1(53,81)=1;
g1(53,85)=(-1);
g1(54,8)=1;
g1(54,47)=(-1);
g1(54,82)=1;
g1(55,46)=(-1);
g1(55,83)=1;
g1(56,34)=(-4);
g1(56,84)=1;
g1(57,34)=(-4);
g1(57,89)=1;
g1(58,3)=(-1);
g1(58,35)=(-1);
g1(58,90)=1;
g1(58,29)=(-1);
g1(58,30)=(-1);
g1(59,3)=(-1);
g1(59,91)=1;
g1(60,29)=(-1);
g1(60,92)=1;
g1(61,114)=(-1);
g1(61,93)=1;
g1(62,116)=(-1);
g1(62,94)=1;

end
